====== Создаем свой плагин для Munin ======

  * [[http://munin-monitoring.org/wiki/HowToWritePlugins|Пример создания плагина в официальной wiki]] 
  * [[https://www.agix.com.au/create-your-own-munin-plugin/|Еще один тутор по созданию плагина к Munin]]

Нужно обязательно сказать, что создавать плагины для Munin очень легко.
Первое о чем нужно знать - плагин это просто скрипт, который возвращает числовые значения в определенном формате. Причем этот скрипт может быть написан на любом языке (bash, perl, php, python и т.д.). Также надо помнить, что по дефолту Munin запрашивает скрипты раз в 5 минут.

Для примера пусть наш плагин будет возвращать рандомно два значения от 0 до 10.

Перейдем в каталог /etc/munin/plugins и увидим, что здесь находятся симлинки на скрипты. У меня вот здесь /usr/share/munin/plugins.
Назовем наш плагин random_val

Создадим его
<code>
nano /usr/share/munin/plugins/random_val
</code>

Сделаем исполняемым
<code>
chmod +x /usr/share/munin/plugins/random_val
</code>

Наш скрипт пока только с одним графиком
<code>
#!/bin/bash

r1=$(( $RANDOM % 10 ));

case $1 in
   config)
        cat <<'EOM'
graph_title Random values
graph_vlabel random val
graph_category system
random11.label random1
EOM
        exit 0;;
esac

printf "random11.value "
echo $r1
</code>

Поясним наш код.
<code>
r1=$(( $RANDOM % 10 )); # переменная r1 получает рандомное число.
</code>

В блоке case описывается конфигурация графика. Нужен он для того, чтобы Munin мог выделить параметры конфигурации вызвав наш скрипт с аргументом config.

<code>
graph_title # название графика
graph_vlabel # название вертикальной оси
graph_category system # в какой категории будет находиться ссылка на график
random11.label random1 # определяется название метки (random1) для данных random11.value.
</code>

Следующий блок просто выводиться значение в понятном Munin-у формате.
<code>
printf "random11.value "
echo $r1
</code>

Чтобы активировать наш плагин, создадим симлинк
<code>
ln -s /usr/share/munin/plugins/random_val /etc/munin/plugins/random_val
</code>

И перезапустим Munin
<code>
systemctl restart munin-node
</code>

Вот и  все. Теперь можно идти в вебинтерфейс

{{:screenshot_2018-01-08_19-05-31.png?400|}}

Примерно так будет выглядеть график через 25 минут

{{::screenshot_2018-01-08_19-24-57.png?400|}}

Давайте добавим еще один график на нашу диаграмму.
<code>
#!/bin/bash

r1=$(( $RANDOM % 10 ));
r2=$(( $RANDOM % 10 ));

case $1 in
   config)
        cat <<'EOM'
graph_title Random values
graph_vlabel random val
graph_category system
random11.label random1
random22.label random2
EOM
        exit 0;;
esac

printf "random11.value "
echo $r1
printf "random22.value "
echo $r2
</code>

Теперь график может выглядеть так

{{::screenshot_2018-01-08_20-23-12.png?400|}}

===== Настройка Warning Critical =====
Графики это конечно хорошо, но еще нужны оповещения в случае превышения пороговых значений.
Добавим в файл /usr/share/munin/plugins/random_val в блок case следующие значения
<code>
random11.warning 3
random11.critical 5
</code>
Теперь все это будет выглядеть так
<code>
#!/bin/bash
r1=$(( $RANDOM % 10 ));
r2=$(( $RANDOM % 10 ));
case $1 in
   config)
        cat <<'EOM'
graph_title Random values
graph_vlabel random val
graph_category system
random11.label random1
random22.label random2
random11.warning 3
random11.critical 5
EOM
        exit 0;;
esac
printf "random11.value "
echo $r1
printf "random22.value "
echo $r2
</code>
Хотя я не вижу смысла именно в обоих (warning и critical) значениях. Так как при настройке уведомлений, нельзя разделить или как-то выделить один из этих параметров.
Также данные настройки пороговых значений можно переопределить для каждого хоста в отдельности. Сделать это можно в файле /etc/munin/munin.conf. На пример так
<code>
[munin1.testing]
    address 127.0.0.1
    use_node_name yes
    random_val.random11.critical 4 # Здесь переопределяется значение порогового значения
# random_val - имя плагина как в директории /etc/munin/plugins
# random11 - название графика
# critical - название уровня порогового значения (critical или warning)
</code>
Сами уведомления настраиваются в файле /etc/munin/munin.conf
[[http://munin-monitoring.org/wiki/munin.conf|Здесь]] официальная wiki
<code>
# Добавим строчку в любом месте
contact.mail.command /etc/munin/telegram.sh
# contact - обязательное
# mail - вместо этого можно любое значение
# command - обязательное
# /etc/munin/telegram.sh - путь до любого скрипта, который пошлет уведомление
</code>